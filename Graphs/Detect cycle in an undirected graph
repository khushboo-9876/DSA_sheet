class Solution {
    // Function to detect cycle in an undirected graph.
    public boolean isCycle(int V, ArrayList<ArrayList<Integer>> adj) {
        // Code here
        boolean []vis=new boolean[V];
        
        for(int i=0;i<V;i++){
            if(vis[i]==false){
                if(dfs(adj,vis,i,-1)) return true;
            }
        }
        return false;
    }
    public boolean dfs(ArrayList<ArrayList<Integer>> adj,boolean[] vis,int curr,int parent){
        vis[curr]=true;
        for(int i:adj.get(curr)){
            //cycle exist
            if(vis[i]==true && i!=parent){
                return true;
            }
            //do nothing
            else if(!vis[i]){
                if(dfs(adj,vis,i,curr)){
                    return true;
                }
            }
        }
        return false;
    }
}
