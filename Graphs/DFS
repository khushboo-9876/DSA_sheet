class Solution {
    // Function to return a list containing the DFS traversal of the graph.
    public static void dfs(ArrayList<ArrayList<Integer>> adj,boolean[] vis,ArrayList<Integer> dfs,int s){
        vis[s]=true;
        dfs.add(s);
        for(int i:adj.get(s)){
            if(vis[i]==false){
                dfs(adj,vis,dfs,i);
            }
        }
    }
    public ArrayList<Integer> dfsOfGraph(int V, ArrayList<ArrayList<Integer>> adj) {
        // Code here
        boolean[] vis=new boolean[V];
        ArrayList<Integer> dfs=new ArrayList<>();
        int s=0;
        for(int i=0;i<V;i++){
            if(vis[i]==false){
                dfs(adj,vis,dfs,s);
            }
        }
        return dfs;
    }
}
